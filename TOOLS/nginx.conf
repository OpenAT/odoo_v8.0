upstream DBNAME {
    server 127.0.0.1:BASEPORT69 weight=1 fail_timeout=600s;
}

upstream DBNAME-pad {
    server 127.0.0.1:BASEPORT91 weight=1 fail_timeout=600s;
}

upstream DBNAME-cloud {
    server unix:/var/run/php5-fpm.sock;
}

server {
    listen 80;
    server_name DOMAIN_NAME;
    if ( -f /usr/share/nginx/html/nginxmaintenance_ein.html ) {
        set $nginxmaintenance_ein "nginxein";
    }
    if ( -f MAINTENANCEMODE ) {
        set $maintenance_ein "ein";
    }
    }
    if ( $remote_addr != "81.189.40.193" ) {
        set $maintenance_ein "${maintenance_ein}denie";
    }
    if ( $maintenance_ein = "eindenie" ) {
        return 503;
    }
    if ( $nginxmaintenance_ein = "nginxeindenie" ) {
        return 503;
    }
    error_page 500 502 503 504 @maintenance;
    location @maintenance {
        set $maintenance /503.de.html;
        if ($http_host ~ "\.de$"){
            set $maintenance /503.en.html;
        }
        rewrite ^(.*)$ $maintenance break;
    }
    proxy_set_header X-OpenERP-dbfilter "DBNAME";

    # log files
    access_log DBLOGPATH/DBNAME-nginx-access.log;
    error_log DBLOGPATH/DBNAME-nginx-error.log;

    # Specifies the maximum accepted body size of a client request,
    # as indicated by the request header Content-Length.
    client_max_body_size 1024m;

    # increase proxy buffer to handle some OpenERP web requests
    proxy_buffers 16 64k;
    proxy_buffer_size 128k;

    location / {
        proxy_pass http://DBNAME;

        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;

        # force timeouts if the backend dies
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

        # set headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;



        # by default, do not forward anything
        proxy_redirect off;
    }

    # etherpad configuration
    #location /pad {
      #rewrite ^/pad$ /pad/ permanent;
      #rewrite /pad/(.*) /$1 break;

      #proxy_pass http://localhost:BASEPORT91/;
      #proxy_redirect / /pad/;

      #proxy_set_header Host $host;
      #proxy_set_header X-Real-IP $remote_addr;
      #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #proxy_buffering off;
    #}
}

# etherpad
server {
    listen 80;
    server_name pad.DOMAIN_NAME;

    # log files
    access_log DBLOGPATH/DBNAME-nginx-access.log;
    error_log DBLOGPATH/DBNAME-nginx-error.log;

    location / {
      proxy_pass http://DBNAME-pad;
      proxy_redirect default;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_buffering off;
    }
}

# owncloud
server {
    listen 80;
    server_name cloud.DOMAIN_NAME;

    # log files
    access_log DBLOGPATH/DBNAME-nginx-access.log;
    error_log DBLOGPATH/DBNAME-nginx-error.log;

    # Path to the root of your installation
    root DBPATH/owncloud/;

    client_max_body_size 10G; # set max upload size
    fastcgi_buffers 64 4K;

    rewrite ^/caldav(.*)$ /remote.php/caldav$1 redirect;
    rewrite ^/carddav(.*)$ /remote.php/carddav$1 redirect;
    rewrite ^/webdav(.*)$ /remote.php/webdav$1 redirect;

    index index.php;
    error_page 403 /core/templates/403.php;
    error_page 404 /core/templates/404.php;

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~ ^/(data|config|\.ht|db_structure\.xml|README) {
            deny all;
    }

    location / {
            # The following 2 rules are only needed with webfinger
            rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
            rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

            rewrite ^/.well-known/carddav /remote.php/carddav/ redirect;
            rewrite ^/.well-known/caldav /remote.php/caldav/ redirect;

            rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;

            try_files $uri $uri/ index.php;
    }

    location ~ ^(.+?\.php)(/.*)?$ {
            try_files $1 =404;

            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$1;
            fastcgi_param PATH_INFO $2;
            #fastcgi_param HTTPS on;
            fastcgi_pass DBNAME-cloud;
    }

    # Optional: set long EXPIRES header on static assets
    location ~* ^.+\.(jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
            expires 30d;
            # Optional: Don't log access to assets
            access_log off;
    }
}